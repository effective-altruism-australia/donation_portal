# For local development and testing only.

FROM --platform=linux/amd64 ubuntu:24.04

# Avoid prompts from apt
ENV DEBIAN_FRONTEND=noninteractive

# Update and install dependencies
RUN apt-get update && \
    apt-get upgrade -y && \
    apt-get install -y \
        # Essential build tools
        build-essential \
        # Libraries for building Python
        libssl-dev zlib1g-dev libbz2-dev libreadline-dev libsqlite3-dev \
        # Additional libraries that some Python packages might need
        libncursesw5-dev libxml2-dev libxmlsec1-dev libffi-dev liblzma-dev \
        # Useful tools
        wget curl git vim \
        # Webkit html to pdf
        wkhtmltopdf \
        # Virtual X server for wkhtmltopdf
        xvfb \
        # Authentication for X server
        xauth \
        # PostgreSQL
        postgresql \
        libpq-dev \
        # Redis
        redis-server \
        # Sudo
        sudo \
        # Memcached
        memcached \
        libmemcached-tools && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

# Create a new user "devuser"
RUN useradd -ms /bin/bash devuser

# Add the user to the sudo group
RUN usermod -aG sudo devuser

# Set up password-less sudo for the user
RUN echo "devuser ALL=(ALL) NOPASSWD:ALL" >> /etc/sudoers

# Switch to the new user
USER devuser

# Install uv
RUN curl -LsSf https://astral.sh/uv/0.6.14/install.sh | sh
ENV PATH="/root/.local/bin/:$PATH"

# Start PostgreSQL, set a password and create eaa database
USER postgres
RUN service postgresql start && \
    psql -c "ALTER USER postgres PASSWORD 'password';" && \
    psql -c "CREATE ROLE eaa WITH LOGIN CREATEDB SUPERUSER PASSWORD 'password';" && \
    psql -c "CREATE DATABASE donations;" && \
    psql -c "GRANT ALL PRIVILEGES ON DATABASE donations TO eaa;" && \
    psql -d donations -c "ALTER SCHEMA public OWNER TO eaa;" && \
    psql -d donations -c "GRANT ALL ON SCHEMA public TO eaa;"
USER devuser

# Install nvm and node
RUN export NVM_DIR="$HOME/.nvm" && \
    curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.7/install.sh | bash && \
    . $NVM_DIR/nvm.sh && nvm install 22  

# Fix "missing locales" errors in this Ubuntu image
RUN sudo locale-gen "en_US.UTF-8"

# Document that the service listens on port 8000. Note, this doesn't actually
# open the port - you'll need to run `docker run -p 8000:8000 <image name>`.
EXPOSE 8000