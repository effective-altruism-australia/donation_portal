# For local development and testing only.

FROM --platform=linux/amd64 ubuntu:24.04

# Avoid prompts from apt
ENV DEBIAN_FRONTEND=noninteractive

# Set environment variables
ENV PYENV_ROOT=/root/.pyenv
ENV PATH=$PYENV_ROOT/shims:$PYENV_ROOT/bin:$PATH

# Update and install dependencies
RUN apt-get update && apt-get upgrade -y \
    && apt-get install -y \
        # Essential build tools
        build-essential \
        # Libraries for building Python
        libssl-dev zlib1g-dev libbz2-dev libreadline-dev libsqlite3-dev \
        # Additional libraries that some Python packages might need
        libncursesw5-dev libxml2-dev libxmlsec1-dev libffi-dev liblzma-dev \
        # Useful tools
        wget curl git vim \
        # App specific dependencies
        wkhtmltopdf \
        xauth \
        xvfb \
        # PostgreSQL
        postgresql \
        libpq-dev \
        # Redis
        redis-server \
        # Sudo
        sudo \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Create a new user "devuser"
RUN useradd -ms /bin/bash devuser

# Add the user to the sudo group
RUN usermod -aG sudo devuser

# Set up password-less sudo for the user
RUN echo "devuser ALL=(ALL) NOPASSWD:ALL" >> /etc/sudoers

# Switch to the new user
USER devuser

# Install pyenv
ENV PYENV_ROOT=/home/devuser/.pyenv
ENV PATH=$PYENV_ROOT/shims:$PYENV_ROOT/bin:$PATH
RUN curl https://pyenv.run | bash
RUN echo 'export PYENV_ROOT="$HOME/.pyenv"' >> ~/.bashrc && \
    echo '[[ -d $PYENV_ROOT/bin ]] && export PATH="$PYENV_ROOT/bin:$PATH"' >> ~/.bashrc && \
    echo 'eval "$(pyenv init - bash)"' >> ~/.bashrc && \
    echo 'export PYENV_ROOT="$HOME/.pyenv"' >> ~/.profile && \
    echo '[[ -d $PYENV_ROOT/bin ]] && export PATH="$PYENV_ROOT/bin:$PATH"' >> ~/.profile && \
    echo 'eval "$(pyenv init - bash)"' >> ~/.profile

# # Install Python versions
RUN pyenv install 3.13.1

# # Set global Python version
RUN pyenv global 3.13.1

# # Start PostgreSQL, set a password and create eaa database
USER postgres
RUN service postgresql start && \
    psql -c "ALTER USER postgres PASSWORD 'password';" && \
    psql -c "CREATE ROLE eaa WITH LOGIN PASSWORD 'password';" && \
    psql -c "CREATE DATABASE donations;" && \
    psql -c "GRANT ALL PRIVILEGES ON DATABASE donations TO eaa;"
USER devuser

# Install nvm and node
RUN export NVM_DIR="$HOME/.nvm" && \
    curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.7/install.sh | bash && \
    . $NVM_DIR/nvm.sh && nvm install 22  

# Fix "missing locales" errors in this Ubuntu image
RUN sudo locale-gen "en_US.UTF-8"

# Document that the service listens on port 8000. Note, this doesn't actually
# open the port - you'll need to run `docker run -p 8000:8000 <image name>`.
EXPOSE 8000